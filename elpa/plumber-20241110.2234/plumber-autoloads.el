;;; plumber-autoloads.el --- automatically extracted autoloads (do not edit)   -*- lexical-binding: t -*-
;; Generated by the `loaddefs-generate' function.

;; This file is part of GNU Emacs.

;;; Code:

(add-to-list 'load-path (or (and load-file-name (directory-file-name (file-name-directory load-file-name))) (car load-path)))



;;; Generated autoloads from plumber.el

(autoload 'plumber-plumb "plumber" "\
Plumb the specified TEXT.

The plumbing functionality is based on Plan9's plumber.  In Emacs, it simply
allows you to call a different function depending on the format of the TEXT.  It
checks the format against the regular expressions specified in the
`plumber-rules' alist.  Alternatively, the `plumber-plumb-as' function can also
be used for manually specifying the plumber rule.

When called interactively, the `plumber-get-user-text' function is used for
obtaining the TEXT argument.

(fn TEXT)" t)
(autoload 'plumber-plumb-as "plumber" "\
Plumb the specified TEXT with the rule matching RULE-NAME.

This function is similar to `plumber-plumb', but `plumber-rules' is filtered
using the \"name\" field, rather than \"regexp\".

When called interactively, the `plumber-get-user-text' function is used for
obtaining the TEXT argument, and the `plumber-get-rule-name' function is used
for obtaining the RULE-NAME argument.

(fn TEXT RULE-NAME)" t)
(register-definition-prefixes "plumber" '("plumber-"))

;;; End of scraped data

(provide 'plumber-autoloads)

;; Local Variables:
;; version-control: never
;; no-byte-compile: t
;; no-update-autoloads: t
;; no-native-compile: t
;; coding: utf-8-emacs-unix
;; End:

;;; plumber-autoloads.el ends here
