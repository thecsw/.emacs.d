;;; org-table-highlight-autoloads.el --- automatically extracted autoloads (do not edit)   -*- lexical-binding: t -*-
;; Generated by the `loaddefs-generate' function.

;; This file is part of GNU Emacs.

;;; Code:

(add-to-list 'load-path (or (and load-file-name (directory-file-name (file-name-directory load-file-name))) (car load-path)))



;;; Generated autoloads from org-table-highlight.el

(autoload 'org-table-highlight-load-metadata "org-table-highlight" "\
Load Org table highlight metadata from `org-table-highlight-metadata-file'." t)
(autoload 'org-table-highlight-column "org-table-highlight" "\
Highlight the current Org table column with a cycling or user-supplied COLOR.

- With a prefix argument (\\[universal-argument]), prompt for a color.
- With a double prefix argument, prompt for a conditional PREDICATE.
  PREDICATE is a string expression like '>10', '=TODO', or '>=50 and <=100'.
  Only cells that satisfy this will be highlighted.
- With a triple prefix argument, also EXTEND the highlight to the whole row.

(fn &optional COLOR PREDICATE EXTEND)" t)
(autoload 'org-table-highlight-row "org-table-highlight" "\
Highlight the current Org table row with a cycling or user-supplied COLOR.
With a prefix argument (\\[universal-argument]), prompt for a color.

(fn &optional COLOR)" t)
(autoload 'org-table-highlight-clear-column-highlights "org-table-highlight" "\
Clear highlights in the current Org table column, or all columns.

With a prefix argument ALL, clear all column highlights in the
current table.  Otherwise, clear only the highlight in the
current column.

(fn &optional ALL)" t)
(autoload 'org-table-highlight-clear-row-highlights "org-table-highlight" "\
Clear highlights in current Org table row.
With prefix argument ALL, clear all row highlights.

(fn &optional ALL)" t)
(autoload 'org-table-highlight-clear-table-highlights "org-table-highlight" "\
Clear all column and row highlights in current Org table." t)
(autoload 'org-table-highlight-list-highlights "org-table-highlight" "\
List highlighted Org tables.

BUFFERS-TO-PROCESS is the list of buffer to display the highlight.
Behavior depends on the prefix argument (\\[universal-argument]):
- No prefix: List tables in the current buffer.
- One prefix: Prompt for a buffer to list.
- Two prefixes: List tables from all buffers with known highlight metadata.

(fn &optional BUFFERS-TO-PROCESS)" t)
(autoload 'org-table-highlight-mode "org-table-highlight" "\
Minor mode to enable or disable Org table highlighting.

When enabled:
- Highlights are automatically restored after table alignments or movements.
- Metadata is maintained and saved on buffer close.

When disabled:
- All highlights (overlays) in the current buffer are removed.
- All metadata for this buffer is cleared.
- Advices and hooks are disabled.

This is a minor mode.  If called interactively, toggle the
`Org-Table-Highlight mode' mode.  If the prefix argument is
positive, enable the mode, and if it is zero or negative, disable
the mode.

If called from Lisp, toggle the mode if ARG is `toggle'.  Enable
the mode if ARG is nil, omitted, or is a positive number.
Disable the mode if ARG is a negative number.

To check whether the minor mode is enabled in the current buffer,
evaluate `org-table-highlight-mode'.

The mode's hook is called both when the mode is enabled and when
it is disabled.

(fn &optional ARG)" t)
(register-definition-prefixes "org-table-highlight" '("org-table-highlight-"))

;;; End of scraped data

(provide 'org-table-highlight-autoloads)

;; Local Variables:
;; version-control: never
;; no-byte-compile: t
;; no-update-autoloads: t
;; no-native-compile: t
;; coding: utf-8-emacs-unix
;; End:

;;; org-table-highlight-autoloads.el ends here
