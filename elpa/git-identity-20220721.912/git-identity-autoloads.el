;;; git-identity-autoloads.el --- automatically extracted autoloads (do not edit)   -*- lexical-binding: t -*-
;; Generated by the `loaddefs-generate' function.

;; This file is part of GNU Emacs.

;;; Code:

(add-to-list 'load-path (or (and load-file-name (directory-file-name (file-name-directory load-file-name))) (car load-path)))



;;; Generated autoloads from git-identity.el

(defvar git-identity-git-executable "git" "\
Executable file of Git.")
(custom-autoload 'git-identity-git-executable "git-identity" t)
(defvar git-identity-default-username (when (and (stringp user-full-name) (not (string-empty-p user-full-name))) user-full-name) "\
Default full name of the user set in Git repositories.")
(custom-autoload 'git-identity-default-username "git-identity" t)
(defvar git-identity-list nil "\
List of plists of Git identities.")
(custom-autoload 'git-identity-list "git-identity" t)
(autoload 'git-identity-complete "git-identity" "\
Display PROMPT and select an identity from `git-identity-list'.

(fn PROMPT)")
(autoload 'git-identity-set-identity "git-identity" "\
Set the identity for the repository at the working directory.

This function lets the user choose an identity for the current
repository using `git-identity-complete' function and sets the
user name and the email address in the local configuration of the
Git repository.

Optionally, you can set PROMPT for the identity.
If it is omitted, the default prompt is used.

(fn &optional PROMPT)" t)
 (autoload 'git-identity-info "git-identity")
(autoload 'git-identity-ensure "git-identity" "\
Ensure that the current repository has an identity.")
(defvar git-identity-magit-mode nil "\
Non-nil if Git-Identity-Magit mode is enabled.
See the `git-identity-magit-mode' command
for a description of this minor mode.
Setting this variable directly does not take effect;
either customize it (see the info node `Easy Customization')
or call the function `git-identity-magit-mode'.")
(custom-autoload 'git-identity-magit-mode "git-identity" nil)
(autoload 'git-identity-magit-mode "git-identity" "\
Global minor mode for running Git identity checks in Magit.

This mode enables the following features:

- Add a hook to `magit-commit' to ensure that you have a
  global/local identity configured in the repository.

This is a global minor mode.  If called interactively, toggle the
`Git-Identity-Magit mode' mode.  If the prefix argument is
positive, enable the mode, and if it is zero or negative, disable
the mode.

If called from Lisp, toggle the mode if ARG is `toggle'.  Enable
the mode if ARG is nil, omitted, or is a positive number.
Disable the mode if ARG is a negative number.

To check whether the minor mode is enabled in the current buffer,
evaluate `(default-value \\='git-identity-magit-mode)'.

The mode's hook is called both when the mode is enabled and when
it is disabled.

(fn &optional ARG)" t)
(register-definition-prefixes "git-identity" '("git-identity-"))

;;; End of scraped data

(provide 'git-identity-autoloads)

;; Local Variables:
;; version-control: never
;; no-byte-compile: t
;; no-update-autoloads: t
;; no-native-compile: t
;; coding: utf-8-emacs-unix
;; End:

;;; git-identity-autoloads.el ends here
