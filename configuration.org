* MELPA
#+BEGIN_SRC emacs-lisp
(require 'package)
(let* ((no-ssl (and (memq system-type '(windows-nt ms-dos))
                    (not (gnutls-available-p))))
       (proto (if no-ssl "http" "https")))
  (when no-ssl
    (warn "\
Your version of Emacs does not support SSL connections,
which is unsafe because it allows man-in-the-middle attacks.
There are two things you can do about this warning:
1. Install an Emacs version that does support SSL and be safe.
2. Remove this warning from your init file so you won't see it again."))
  ;; Comment/uncomment these two lines to enable/disable MELPA and MELPA Stable as desired
  (add-to-list 'package-archives (cons "melpa" (concat proto "://melpa.org/packages/")) t)
  ;;(add-to-list 'package-archives (cons "melpa-stable" (concat proto "://stable.melpa.org/packages/")) t)
  (when (< emacs-major-version 24)
    ;; For important compatibility libraries like cl-lib
    (add-to-list 'package-archives (cons "gnu" (concat proto "://elpa.gnu.org/packages/")))))
#+END_SRC
* Auto-complete
 #+BEGIN_SRC emacs-lisp
   (add-hook 'after-init-hook 'global-company-mode)
   (ac-config-default)
   (global-auto-complete-mode t)
   (define-key ac-mode-map (kbd "M-TAB") 'auto-complete)
   (setq ac-auto-start 1)
   (setq ac-auto-show-menu 0.8)
 #+END_SRC
* Coding styles
** C

#+BEGIN_SRC emacs-lisp
(setq-default c-basic-offset 8
	      c-default-style "k&r"
	      tab-width 8
	      indent-tabs-mode t)
#+END_SRC
** Python
#+BEGIN_SRC emacs-lisp
(setq-default python-basic-offset 8
	      tab-width 8
	      indent-tabs-mode t)
#+END_SRC
* Backup control
#+BEGIN_SRC emacs-lisp
  ;; Instea of putting *~ backups in current directory,
  ;; put them in local .saves
  (setq backup-directory-alist `(("." . ".saves")))

  ;; Just to stop spamming backup files
  (setq delete-old-versions t
	kept-new-versions 6
	kept-old-versions 2
	version-control t)
#+END_SRC
* Display control
** Hide top bar
#+BEGIN_SRC emacs-lisp
(menu-bar-mode -1)
#+END_SRC
** Line numbers
#+BEGIN_SRC emacs-lisp
(setq linum-format "%4d  ")
(global-linum-mode 1)
#+END_SRC
** Scrolling
 #+BEGIN_SRC emacs-lisp
 (setq redisplay-dont-pause t
       scroll-margin 1
       scroll-step 1
       scroll-conservatively 10000
       scroll-preserve-screen-position 1)
 #+END_SRC
** Silence annoying bell
#+BEGIN_SRC emacs-lisp
(setq ring-bell-function 'ignore)
#+END_SRC
** Character limit in Org-Mode
#+BEGIN_SRC emacs-lisp
(add-hook 'org-mode-hook '(lambda () (setq fill-column 80)))
(add-hook 'org-mode-hook 'turn-on-auto-fill)
#+END_SRC
** Pair the braces
#+BEGIN_SRC emacs-lisp
(require 'autopair)
(autopair-global-mode)
#+END_SRC
** Open shell on F1
#+BEGIN_SRC emacs-lisp
(global-set-key (kbd "<f1>") 'shell)
#+END_SRC
** Show Paren Mode
#+BEGIN_SRC emacs-lisp
  (show-paren-mode 1)
  (setq show-paren-delay 0)
#+END_SRC
** Disable validate link in HTML
#+BEGIN_SRC emacs-lisp
(setq org-html-validation-link nil)
#+END_SRC
** Window management
 #+BEGIN_SRC emacs-lisp
 (global-set-key (kbd "C-x <up>") 'windmove-up)
 (global-set-key (kbd "C-x <down>") 'windmove-down)
 (global-set-key (kbd "C-x <left>") 'windmove-left)
 (global-set-key (kbd "C-x <right>") 'windmove-right)
 #+END_SRC
* Go environment
#+BEGIN_SRC emacs-lisp
  ;; Make sure that $GOPATH/bin is enabled
  (add-to-list 'exec-path "~/go/bin")
  ;; Run goimports when saving a .go file
  (setq gofmt-command "goimports")
  ;; Format on save
  (add-hook 'before-save-hook 'gofmt-before-save)
  (add-hook 'go-mode-hook 'auto-complete-for-go)
  ;; Enable auto-complete
  (require 'go-autocomplete)
  (auto-complete-mode 1)
  ;; Use C-c C-c to jump to definition
  (global-set-key (kbd"C-c C-c") 'godef-jump)
#+END_SRC
* Dashboard
#+BEGIN_SRC emacs-lisp
  ;; Enable dashboard
  (require 'dashboard)
  ;; Add the hook
  (dashboard-setup-startup-hook)
  ;; Set the dashboard as the default buffer
  (setq initial-buffer-choice (lambda () (get-buffer "*dashboard*")))
#+END_SRC
* Magit
#+BEGIN_SRC emacs-lisp
  ;; Press C-x g to open magit
  (global-set-key (kbd "C-x g") 'magit-status)
  ;; Define some colors for magit, I love pink
  (custom-set-faces
   ;; custom-set-faces was added by Custom.
   ;; If you edit it by hand, you could mess it up, so be careful.
   ;; Your init file should contain only one such instance.
   ;; If there is more than one, they won't work right.
   '(default ((t (:inherit nil :stipple nil :background "unspecified-bg" :foreground "#f8f8f2" :inverse-video nil :box nil :strike-through nil :overline nil :underline nil :slant normal :weight normal :height 1 :width normal :foundry "default" :family "default"))))
   '(diff-function ((t (:inherit nil))))
   '(line-number ((t (:inherit nil))))
   '(linum ((t (:background "unspecified-bg" :foreground "#565761" :slant italic))))
   '(magit-diff-added ((t (:foreground "#22aa22"))))
   '(magit-diff-added-highlight ((t (:background "color-233" :foreground "#22aa22"))))
   '(magit-diff-context-highlight ((t (:background "color-233" :foreground "brightyellow"))))
   '(magit-diff-file-heading-highlight ((t (:foreground "magenta"))))
   '(magit-diff-removed ((t (:foreground "#aa2222"))))
   '(magit-diff-removed-highlight ((t (:background "color-233" :foreground "#aa2222"))))
   '(magit-section-highlight ((t (:background "color-232" :foreground "brightmagenta" :weight bold)))))
#+END_SRC
* Powerline theme
#+BEGIN_SRC emacs-lisp
  (require 'powerline)
  ;; Use the vim powerline theme
  (powerline-default-theme)
#+END_SRC
* Compiling Org-Ref
#+BEGIN_SRC emacs-lisp
  ;; Use org-ref
  (require 'org-ref)
  ;; Build nonstopmode with pdflatex
  (setq org-latex-pdf-process
  '("pdflatex -shell-escape -interaction nonstopmode -output-directory %o %b %f"
  "bibtex %b"
  "makeindex %b"
  "pdflatex -shell-escape -interaction nonstopmode -output-directory %o %b %f"
  "pdflatex -shell-escape -interaction nonstopmode -output-directory %o %b %f"))

  ;; (setq org-latex-listings 'minted
  ;;       org-latex-packages-alist '(("" "minted")))
#+END_SRC
* TRAMP
#+BEGIN_SRC emacs-lisp
  ;; Default to ssh when using tramp
  (setq tramp-default-method "ssh")
#+END_SRC
* M-x Autocomplete
#+BEGIN_SRC emacs-lisp
  ;; Fuzzy command complete on M-x
  (global-set-key (kbd "M-x") 'smex)
#+END_SRC
* Default theme
  #+BEGIN_SRC emacs-lisp
    ;; I like lush and use it by default
    (load-theme 'lush t)
#+END_SRC
